name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test_and_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'pnpm'

      - name: Install pnpm
        run: |
          # First try corepack (built into Node.js)
          corepack enable || echo "Corepack not available"
          corepack prepare pnpm@8 --activate || echo "Corepack prepare failed"
          
          # Fallback to npm install
          if ! command -v pnpm &> /dev/null; then
            npm install -g pnpm@8
            echo "Adding pnpm to PATH: $(npm root -g)/pnpm/bin"
            echo "$(npm root -g)/pnpm/bin" >> $GITHUB_PATH
          fi

      - name: Verify pnpm
        run: |
          echo "PNPM version: $(pnpm --version)"
          echo "PNPM path: $(which pnpm)"
          echo "Current PATH: $PATH"

      - name: Install dependencies
        run: pnpm install

      - name: Run linting
        run: pnpm run turbo:lint

      - name: Run tests
        run: pnpm run turbo:test

      - name: Build all apps
        run: pnpm run turbo:build

  deploy:
    needs: test_and_build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'pnpm'

      - name: Install pnpm
        run: |
          corepack enable || echo "Corepack not available"
          corepack prepare pnpm@8 --activate || echo "Corepack prepare failed"
          
          if ! command -v pnpm &> /dev/null; then
            npm install -g pnpm@8
            echo "Adding pnpm to PATH: $(npm root -g)/pnpm/bin"
            echo "$(npm root -g)/pnpm/bin" >> $GITHUB_PATH
          fi

      - name: Verify pnpm
        run: pnpm --version

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm run turbo:build

      - name: Deploy to Vercel
        run: |
          npm install -g vercel@latest
          vercel deploy --prod --token ${{ secrets.VERCEL_TOKEN }} \
            --scope ${{ secrets.VERCEL_SCOPE }} \
            --yes